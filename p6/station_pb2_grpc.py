# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import station_pb2 as station__pb2


class StationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StationSchema = channel.unary_unary(
                '/Station/StationSchema',
                request_serializer=station__pb2.EmptyRequest.SerializeToString,
                response_deserializer=station__pb2.StationSchemaReply.FromString,
                )
        self.StationName = channel.unary_unary(
                '/Station/StationName',
                request_serializer=station__pb2.StationInspectRequest.SerializeToString,
                response_deserializer=station__pb2.StationNameReply.FromString,
                )
        self.RecordTemps = channel.unary_unary(
                '/Station/RecordTemps',
                request_serializer=station__pb2.RecordTempsRequest.SerializeToString,
                response_deserializer=station__pb2.RecordTempsReply.FromString,
                )
        self.StationMax = channel.unary_unary(
                '/Station/StationMax',
                request_serializer=station__pb2.StationInspectRequest.SerializeToString,
                response_deserializer=station__pb2.StationMaxReply.FromString,
                )


class StationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StationSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StationName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordTemps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StationMax(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StationSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.StationSchema,
                    request_deserializer=station__pb2.EmptyRequest.FromString,
                    response_serializer=station__pb2.StationSchemaReply.SerializeToString,
            ),
            'StationName': grpc.unary_unary_rpc_method_handler(
                    servicer.StationName,
                    request_deserializer=station__pb2.StationInspectRequest.FromString,
                    response_serializer=station__pb2.StationNameReply.SerializeToString,
            ),
            'RecordTemps': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordTemps,
                    request_deserializer=station__pb2.RecordTempsRequest.FromString,
                    response_serializer=station__pb2.RecordTempsReply.SerializeToString,
            ),
            'StationMax': grpc.unary_unary_rpc_method_handler(
                    servicer.StationMax,
                    request_deserializer=station__pb2.StationInspectRequest.FromString,
                    response_serializer=station__pb2.StationMaxReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Station', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Station(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StationSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Station/StationSchema',
            station__pb2.EmptyRequest.SerializeToString,
            station__pb2.StationSchemaReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StationName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Station/StationName',
            station__pb2.StationInspectRequest.SerializeToString,
            station__pb2.StationNameReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordTemps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Station/RecordTemps',
            station__pb2.RecordTempsRequest.SerializeToString,
            station__pb2.RecordTempsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StationMax(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Station/StationMax',
            station__pb2.StationInspectRequest.SerializeToString,
            station__pb2.StationMaxReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
